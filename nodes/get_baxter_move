#!/usr/bin/env python

import rospy
from checkers.play_checkers import CheckersAI, Board
import numpy as np

if __name__ == '__main__':
    rospy.init_node('get_baxter_move')
    print('RULES: Grid squares start counting from Baxter\'s left corner (Ex. 3,3 = third column and third row from Baxter\'s left corner)\nDark player gos first. Double jumps are not allowed (yet).')
    ai = CheckersAI()
    #   this side is for player whos turn it its
    state = [[-1, 0,-1, 0,-1, 0,-1, 0],
             [ 0,-1, 0,-1, 0,-1 ,0,-1],
             [-1, 0,-1, 0,-1, 0,-1, 0],
             [ 0, 0, 0, 0, 0, 0, 0, 0],
             [ 0, 0, 0, 0, 0, 0, 0, 0],
             [ 0, 1, 0, 1, 0, 1, 0, 1],
             [ 1, 0, 1, 0, 1, 0, 1, 0],
             [ 0, 1, 0, 1, 0, 1, 0, 1]]
    board = Board(state)
    player = raw_input('Enter Baxter\'s color(Black or Red):') #in future batxer will know based on how the board is set up
    s = ai.give_command(board,player)
